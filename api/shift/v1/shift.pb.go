// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: shift.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlanType int32

const (
	PlanType_PLAN_TYPE_UNSPECIFIED      PlanType = 0
	PlanType_PLAN_TYPE_PATROL_PLAN      PlanType = 1
	PlanType_PLAN_TYPE_PRODUCTION_PLAN  PlanType = 2
	PlanType_PLAN_TYPE_MAINTENANCE_PLAN PlanType = 3
)

// Enum value maps for PlanType.
var (
	PlanType_name = map[int32]string{
		0: "PLAN_TYPE_UNSPECIFIED",
		1: "PLAN_TYPE_PATROL_PLAN",
		2: "PLAN_TYPE_PRODUCTION_PLAN",
		3: "PLAN_TYPE_MAINTENANCE_PLAN",
	}
	PlanType_value = map[string]int32{
		"PLAN_TYPE_UNSPECIFIED":      0,
		"PLAN_TYPE_PATROL_PLAN":      1,
		"PLAN_TYPE_PRODUCTION_PLAN":  2,
		"PLAN_TYPE_MAINTENANCE_PLAN": 3,
	}
)

func (x PlanType) Enum() *PlanType {
	p := new(PlanType)
	*p = x
	return p
}

func (x PlanType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlanType) Descriptor() protoreflect.EnumDescriptor {
	return file_shift_proto_enumTypes[0].Descriptor()
}

func (PlanType) Type() protoreflect.EnumType {
	return &file_shift_proto_enumTypes[0]
}

func (x PlanType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlanType.Descriptor instead.
func (PlanType) EnumDescriptor() ([]byte, []int) {
	return file_shift_proto_rawDescGZIP(), []int{0}
}

type Affair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MciScheduleId string   `protobuf:"bytes,1,opt,name=mci_schedule_id,json=mciScheduleId,proto3" json:"mci_schedule_id,omitempty"`
	PlanType      PlanType `protobuf:"varint,2,opt,name=plan_type,json=planType,proto3,enum=bbm.mci.shift.v1.PlanType" json:"plan_type,omitempty"`
	PlanId        string   `protobuf:"bytes,3,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
}

func (x *Affair) Reset() {
	*x = Affair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shift_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Affair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Affair) ProtoMessage() {}

func (x *Affair) ProtoReflect() protoreflect.Message {
	mi := &file_shift_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Affair.ProtoReflect.Descriptor instead.
func (*Affair) Descriptor() ([]byte, []int) {
	return file_shift_proto_rawDescGZIP(), []int{0}
}

func (x *Affair) GetMciScheduleId() string {
	if x != nil {
		return x.MciScheduleId
	}
	return ""
}

func (x *Affair) GetPlanType() PlanType {
	if x != nil {
		return x.PlanType
	}
	return PlanType_PLAN_TYPE_UNSPECIFIED
}

func (x *Affair) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type AffairVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MciScheduleId   string   `protobuf:"bytes,1,opt,name=mci_schedule_id,json=mciScheduleId,proto3" json:"mci_schedule_id,omitempty"`
	MciScheduleName string   `protobuf:"bytes,2,opt,name=mci_schedule_name,json=mciScheduleName,proto3" json:"mci_schedule_name,omitempty"`
	PlanType        PlanType `protobuf:"varint,3,opt,name=plan_type,json=planType,proto3,enum=bbm.mci.shift.v1.PlanType" json:"plan_type,omitempty"`
	PlanId          string   `protobuf:"bytes,4,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
}

func (x *AffairVO) Reset() {
	*x = AffairVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shift_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AffairVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AffairVO) ProtoMessage() {}

func (x *AffairVO) ProtoReflect() protoreflect.Message {
	mi := &file_shift_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AffairVO.ProtoReflect.Descriptor instead.
func (*AffairVO) Descriptor() ([]byte, []int) {
	return file_shift_proto_rawDescGZIP(), []int{1}
}

func (x *AffairVO) GetMciScheduleId() string {
	if x != nil {
		return x.MciScheduleId
	}
	return ""
}

func (x *AffairVO) GetMciScheduleName() string {
	if x != nil {
		return x.MciScheduleName
	}
	return ""
}

func (x *AffairVO) GetPlanType() PlanType {
	if x != nil {
		return x.PlanType
	}
	return PlanType_PLAN_TYPE_UNSPECIFIED
}

func (x *AffairVO) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type GetAffairsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Affairs []*Affair `protobuf:"bytes,1,rep,name=affairs,proto3" json:"affairs,omitempty"`
}

func (x *GetAffairsResponse) Reset() {
	*x = GetAffairsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shift_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAffairsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAffairsResponse) ProtoMessage() {}

func (x *GetAffairsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shift_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAffairsResponse.ProtoReflect.Descriptor instead.
func (*GetAffairsResponse) Descriptor() ([]byte, []int) {
	return file_shift_proto_rawDescGZIP(), []int{2}
}

func (x *GetAffairsResponse) GetAffairs() []*Affair {
	if x != nil {
		return x.Affairs
	}
	return nil
}

type Shift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AffairId          string               `protobuf:"bytes,1,opt,name=affair_id,json=affairId,proto3" json:"affair_id,omitempty"`
	TaskId            string               `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ScheduleId        string               `protobuf:"bytes,3,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	ScheduleName      string               `protobuf:"bytes,4,opt,name=schedule_name,json=scheduleName,proto3" json:"schedule_name,omitempty"`
	ReporterId        string               `protobuf:"bytes,5,opt,name=reporter_id,json=reporterId,proto3" json:"reporter_id,omitempty"`
	ReporterName      string               `protobuf:"bytes,6,opt,name=reporter_name,json=reporterName,proto3" json:"reporter_name,omitempty"`
	SuccessorId       string               `protobuf:"bytes,7,opt,name=successor_id,json=successorId,proto3" json:"successor_id,omitempty"`
	SuccessorName     string               `protobuf:"bytes,8,opt,name=successor_name,json=successorName,proto3" json:"successor_name,omitempty"`
	OrganizationId    string               `protobuf:"bytes,9,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	OrganizationName  string               `protobuf:"bytes,10,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	DepartmentId      string               `protobuf:"bytes,11,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	DepartmentName    string               `protobuf:"bytes,12,opt,name=department_name,json=departmentName,proto3" json:"department_name,omitempty"`
	LocationId        string               `protobuf:"bytes,13,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	LocationName      string               `protobuf:"bytes,14,opt,name=location_name,json=locationName,proto3" json:"location_name,omitempty"`
	ShiftName         string               `protobuf:"bytes,15,opt,name=shift_name,json=shiftName,proto3" json:"shift_name,omitempty"`
	FormId            string               `protobuf:"bytes,16,opt,name=form_id,json=formId,proto3" json:"form_id,omitempty"`
	SpeechRecognition string               `protobuf:"bytes,17,opt,name=speech_recognition,json=speechRecognition,proto3" json:"speech_recognition,omitempty"`
	PicturePaths      []string             `protobuf:"bytes,18,rep,name=picture_paths,json=picturePaths,proto3" json:"picture_paths,omitempty"`
	DateSec           *durationpb.Duration `protobuf:"bytes,19,opt,name=date_sec,json=dateSec,proto3" json:"date_sec,omitempty"`
}

func (x *Shift) Reset() {
	*x = Shift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shift_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shift) ProtoMessage() {}

func (x *Shift) ProtoReflect() protoreflect.Message {
	mi := &file_shift_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shift.ProtoReflect.Descriptor instead.
func (*Shift) Descriptor() ([]byte, []int) {
	return file_shift_proto_rawDescGZIP(), []int{3}
}

func (x *Shift) GetAffairId() string {
	if x != nil {
		return x.AffairId
	}
	return ""
}

func (x *Shift) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Shift) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *Shift) GetScheduleName() string {
	if x != nil {
		return x.ScheduleName
	}
	return ""
}

func (x *Shift) GetReporterId() string {
	if x != nil {
		return x.ReporterId
	}
	return ""
}

func (x *Shift) GetReporterName() string {
	if x != nil {
		return x.ReporterName
	}
	return ""
}

func (x *Shift) GetSuccessorId() string {
	if x != nil {
		return x.SuccessorId
	}
	return ""
}

func (x *Shift) GetSuccessorName() string {
	if x != nil {
		return x.SuccessorName
	}
	return ""
}

func (x *Shift) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *Shift) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *Shift) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

func (x *Shift) GetDepartmentName() string {
	if x != nil {
		return x.DepartmentName
	}
	return ""
}

func (x *Shift) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *Shift) GetLocationName() string {
	if x != nil {
		return x.LocationName
	}
	return ""
}

func (x *Shift) GetShiftName() string {
	if x != nil {
		return x.ShiftName
	}
	return ""
}

func (x *Shift) GetFormId() string {
	if x != nil {
		return x.FormId
	}
	return ""
}

func (x *Shift) GetSpeechRecognition() string {
	if x != nil {
		return x.SpeechRecognition
	}
	return ""
}

func (x *Shift) GetPicturePaths() []string {
	if x != nil {
		return x.PicturePaths
	}
	return nil
}

func (x *Shift) GetDateSec() *durationpb.Duration {
	if x != nil {
		return x.DateSec
	}
	return nil
}

type CreateShiftRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AffairId          string   `protobuf:"bytes,1,opt,name=affair_id,json=affairId,proto3" json:"affair_id,omitempty"`
	TaskId            string   `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ScheduleId        string   `protobuf:"bytes,3,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	ScheduleName      string   `protobuf:"bytes,4,opt,name=schedule_name,json=scheduleName,proto3" json:"schedule_name,omitempty"`
	ReporterId        string   `protobuf:"bytes,5,opt,name=reporter_id,json=reporterId,proto3" json:"reporter_id,omitempty"`
	ReporterName      string   `protobuf:"bytes,6,opt,name=reporter_name,json=reporterName,proto3" json:"reporter_name,omitempty"`
	SuccessorId       string   `protobuf:"bytes,7,opt,name=successor_id,json=successorId,proto3" json:"successor_id,omitempty"`
	SuccessorName     string   `protobuf:"bytes,8,opt,name=successor_name,json=successorName,proto3" json:"successor_name,omitempty"`
	OrganizationId    string   `protobuf:"bytes,9,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	OrganizationName  string   `protobuf:"bytes,10,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	DepartmentId      string   `protobuf:"bytes,11,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	DepartmentName    string   `protobuf:"bytes,12,opt,name=department_name,json=departmentName,proto3" json:"department_name,omitempty"`
	LocationId        string   `protobuf:"bytes,13,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	LocationName      string   `protobuf:"bytes,14,opt,name=location_name,json=locationName,proto3" json:"location_name,omitempty"`
	ShiftName         string   `protobuf:"bytes,15,opt,name=shift_name,json=shiftName,proto3" json:"shift_name,omitempty"`
	FormId            string   `protobuf:"bytes,16,opt,name=form_id,json=formId,proto3" json:"form_id,omitempty"`
	SpeechRecognition string   `protobuf:"bytes,17,opt,name=speech_recognition,json=speechRecognition,proto3" json:"speech_recognition,omitempty"`
	PicturePaths      []string `protobuf:"bytes,18,rep,name=picture_paths,json=picturePaths,proto3" json:"picture_paths,omitempty"`
}

func (x *CreateShiftRequest) Reset() {
	*x = CreateShiftRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shift_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateShiftRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShiftRequest) ProtoMessage() {}

func (x *CreateShiftRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shift_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShiftRequest.ProtoReflect.Descriptor instead.
func (*CreateShiftRequest) Descriptor() ([]byte, []int) {
	return file_shift_proto_rawDescGZIP(), []int{4}
}

func (x *CreateShiftRequest) GetAffairId() string {
	if x != nil {
		return x.AffairId
	}
	return ""
}

func (x *CreateShiftRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CreateShiftRequest) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *CreateShiftRequest) GetScheduleName() string {
	if x != nil {
		return x.ScheduleName
	}
	return ""
}

func (x *CreateShiftRequest) GetReporterId() string {
	if x != nil {
		return x.ReporterId
	}
	return ""
}

func (x *CreateShiftRequest) GetReporterName() string {
	if x != nil {
		return x.ReporterName
	}
	return ""
}

func (x *CreateShiftRequest) GetSuccessorId() string {
	if x != nil {
		return x.SuccessorId
	}
	return ""
}

func (x *CreateShiftRequest) GetSuccessorName() string {
	if x != nil {
		return x.SuccessorName
	}
	return ""
}

func (x *CreateShiftRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateShiftRequest) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *CreateShiftRequest) GetDepartmentId() string {
	if x != nil {
		return x.DepartmentId
	}
	return ""
}

func (x *CreateShiftRequest) GetDepartmentName() string {
	if x != nil {
		return x.DepartmentName
	}
	return ""
}

func (x *CreateShiftRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *CreateShiftRequest) GetLocationName() string {
	if x != nil {
		return x.LocationName
	}
	return ""
}

func (x *CreateShiftRequest) GetShiftName() string {
	if x != nil {
		return x.ShiftName
	}
	return ""
}

func (x *CreateShiftRequest) GetFormId() string {
	if x != nil {
		return x.FormId
	}
	return ""
}

func (x *CreateShiftRequest) GetSpeechRecognition() string {
	if x != nil {
		return x.SpeechRecognition
	}
	return ""
}

func (x *CreateShiftRequest) GetPicturePaths() []string {
	if x != nil {
		return x.PicturePaths
	}
	return nil
}

type GetShiftsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handovers []*Shift `protobuf:"bytes,1,rep,name=handovers,proto3" json:"handovers,omitempty"`
}

func (x *GetShiftsResponse) Reset() {
	*x = GetShiftsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shift_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShiftsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShiftsResponse) ProtoMessage() {}

func (x *GetShiftsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shift_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShiftsResponse.ProtoReflect.Descriptor instead.
func (*GetShiftsResponse) Descriptor() ([]byte, []int) {
	return file_shift_proto_rawDescGZIP(), []int{5}
}

func (x *GetShiftsResponse) GetHandovers() []*Shift {
	if x != nil {
		return x.Handovers
	}
	return nil
}

var File_shift_proto protoreflect.FileDescriptor

var file_shift_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x68, 0x69, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x62,
	0x62, 0x6d, 0x2e, 0x6d, 0x63, 0x69, 0x2e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x2e, 0x76, 0x31, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x06, 0x41,
	0x66, 0x66, 0x61, 0x69, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x63, 0x69, 0x5f, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6d, 0x63, 0x69, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x37, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x62, 0x62, 0x6d, 0x2e, 0x6d, 0x63, 0x69, 0x2e, 0x73, 0x68, 0x69, 0x66, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22,
	0xb0, 0x01, 0x0a, 0x08, 0x41, 0x66, 0x66, 0x61, 0x69, 0x72, 0x56, 0x4f, 0x12, 0x26, 0x0a, 0x0f,
	0x6d, 0x63, 0x69, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x63, 0x69, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x63, 0x69, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6d, 0x63, 0x69, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x37, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x62, 0x6d, 0x2e, 0x6d, 0x63, 0x69, 0x2e, 0x73, 0x68,
	0x69, 0x66, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x22, 0x48, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x66, 0x66, 0x61,
	0x69, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x62, 0x6d, 0x2e,
	0x6d, 0x63, 0x69, 0x2e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x66, 0x66,
	0x61, 0x69, 0x72, 0x52, 0x07, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x22, 0xbf, 0x05, 0x0a,
	0x05, 0x53, 0x68, 0x69, 0x66, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x66, 0x66, 0x61, 0x69,
	0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x68, 0x69, 0x66, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x63, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x22, 0x96,
	0x05, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x68, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x68, 0x69, 0x66, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x22, 0x4a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x69, 0x66, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09,
	0x68, 0x61, 0x6e, 0x64, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x62, 0x62, 0x6d, 0x2e, 0x6d, 0x63, 0x69, 0x2e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6f, 0x76,
	0x65, 0x72, 0x73, 0x2a, 0x7f, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x15, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4c,
	0x41, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x50,
	0x4c, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4c,
	0x41, 0x4e, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x4c, 0x41, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x50, 0x4c,
	0x41, 0x4e, 0x10, 0x03, 0x32, 0xf6, 0x03, 0x0a, 0x0c, 0x53, 0x68, 0x69, 0x66, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x66, 0x66, 0x61, 0x69, 0x72, 0x12, 0x18, 0x2e, 0x62, 0x62, 0x6d, 0x2e, 0x6d, 0x63, 0x69, 0x2e,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x66, 0x66, 0x61, 0x69, 0x72, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22,
	0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x6b,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x61, 0x69, 0x72, 0x42, 0x79, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x18, 0x2e, 0x62, 0x62, 0x6d, 0x2e, 0x6d, 0x63, 0x69, 0x2e, 0x73, 0x68, 0x69, 0x66, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x66, 0x66, 0x61, 0x69, 0x72, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x2f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x12, 0x5f, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x41, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x24, 0x2e, 0x62, 0x62, 0x6d, 0x2e, 0x6d, 0x63, 0x69, 0x2e, 0x73, 0x68, 0x69, 0x66,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12,
	0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x66, 0x66, 0x61, 0x69, 0x72, 0x73, 0x12, 0x61, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x12, 0x24, 0x2e, 0x62, 0x62,
	0x6d, 0x2e, 0x6d, 0x63, 0x69, 0x2e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0e, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0x5c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x66, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x62, 0x62, 0x6d, 0x2e, 0x6d, 0x63, 0x69, 0x2e, 0x73,
	0x68, 0x69, 0x66, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x66, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x73, 0x42, 0x11, 0x5a,
	0x0f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shift_proto_rawDescOnce sync.Once
	file_shift_proto_rawDescData = file_shift_proto_rawDesc
)

func file_shift_proto_rawDescGZIP() []byte {
	file_shift_proto_rawDescOnce.Do(func() {
		file_shift_proto_rawDescData = protoimpl.X.CompressGZIP(file_shift_proto_rawDescData)
	})
	return file_shift_proto_rawDescData
}

var file_shift_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_shift_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_shift_proto_goTypes = []interface{}{
	(PlanType)(0),               // 0: bbm.mci.shift.v1.PlanType
	(*Affair)(nil),              // 1: bbm.mci.shift.v1.Affair
	(*AffairVO)(nil),            // 2: bbm.mci.shift.v1.AffairVO
	(*GetAffairsResponse)(nil),  // 3: bbm.mci.shift.v1.GetAffairsResponse
	(*Shift)(nil),               // 4: bbm.mci.shift.v1.Shift
	(*CreateShiftRequest)(nil),  // 5: bbm.mci.shift.v1.CreateShiftRequest
	(*GetShiftsResponse)(nil),   // 6: bbm.mci.shift.v1.GetShiftsResponse
	(*durationpb.Duration)(nil), // 7: google.protobuf.Duration
	(*emptypb.Empty)(nil),       // 8: google.protobuf.Empty
}
var file_shift_proto_depIdxs = []int32{
	0,  // 0: bbm.mci.shift.v1.Affair.plan_type:type_name -> bbm.mci.shift.v1.PlanType
	0,  // 1: bbm.mci.shift.v1.AffairVO.plan_type:type_name -> bbm.mci.shift.v1.PlanType
	1,  // 2: bbm.mci.shift.v1.GetAffairsResponse.affairs:type_name -> bbm.mci.shift.v1.Affair
	7,  // 3: bbm.mci.shift.v1.Shift.date_sec:type_name -> google.protobuf.Duration
	4,  // 4: bbm.mci.shift.v1.GetShiftsResponse.handovers:type_name -> bbm.mci.shift.v1.Shift
	1,  // 5: bbm.mci.shift.v1.ShiftService.CreateAffair:input_type -> bbm.mci.shift.v1.Affair
	8,  // 6: bbm.mci.shift.v1.ShiftService.GetAffairByCurrentUser:input_type -> google.protobuf.Empty
	8,  // 7: bbm.mci.shift.v1.ShiftService.GetAffairs:input_type -> google.protobuf.Empty
	5,  // 8: bbm.mci.shift.v1.ShiftService.CreateShift:input_type -> bbm.mci.shift.v1.CreateShiftRequest
	8,  // 9: bbm.mci.shift.v1.ShiftService.GetShifts:input_type -> google.protobuf.Empty
	8,  // 10: bbm.mci.shift.v1.ShiftService.CreateAffair:output_type -> google.protobuf.Empty
	1,  // 11: bbm.mci.shift.v1.ShiftService.GetAffairByCurrentUser:output_type -> bbm.mci.shift.v1.Affair
	3,  // 12: bbm.mci.shift.v1.ShiftService.GetAffairs:output_type -> bbm.mci.shift.v1.GetAffairsResponse
	8,  // 13: bbm.mci.shift.v1.ShiftService.CreateShift:output_type -> google.protobuf.Empty
	6,  // 14: bbm.mci.shift.v1.ShiftService.GetShifts:output_type -> bbm.mci.shift.v1.GetShiftsResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_shift_proto_init() }
func file_shift_proto_init() {
	if File_shift_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shift_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Affair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shift_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AffairVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shift_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAffairsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shift_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shift_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateShiftRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shift_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShiftsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shift_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shift_proto_goTypes,
		DependencyIndexes: file_shift_proto_depIdxs,
		EnumInfos:         file_shift_proto_enumTypes,
		MessageInfos:      file_shift_proto_msgTypes,
	}.Build()
	File_shift_proto = out.File
	file_shift_proto_rawDesc = nil
	file_shift_proto_goTypes = nil
	file_shift_proto_depIdxs = nil
}
